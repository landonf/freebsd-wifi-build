#!/bin/sh

# XXX ideally these will be installed as part of the package;
# I'll do that later.

. /etc/rc.subr
. /etc/rc.conf.default
. /etc/cfg/rc.conf

# This needs to be deprecated as it's very dnsmasq specific.
# dnsmasq_cmd_options=""

# dnsmasq_dns_enable="YES"
# dnsmasq_dnssec_enable="YES"
# dnsmasq_listen_interface="ifname"
# dnsmasq_listen_ipv4_address="ipv4"
# dnsmasq_domain_name="domain"
# dnsmasq_dhcp_ipv4_range="ipv4,ipv4,leasetime"
# dnsmasq_no_dhcp_interface="ifname"

# For now, ifname parameters are single items; dnsmasq
# allows multiple line items to add multiple things
# (eg multiple listen-interface lines, one per interface.)
# But I'm being slack, so no, I'm not going to do that.

generate_dnsmasq_config()
{
	local cfg_file=$1

	echo "# This is automatically generated!\n" > ${cfg_file}

	if [ "${dnsmasq_dns_enable}" = "NO" ]; then
		echo "# dns_enable=NO" >> ${cfg_file}
		echo "port=0" >> ${cfg_file}
	fi

	# XXX validate listen-interface
	echo "interface=${dnsmasq_listen_interface}" >> ${cfg_file}

	# validate domain name
	if [ "${dnsmasq_domain_name}" != "" ]; then
		echo "domain=${dnsmasq_domain_name}" >> ${cfg_file}
	fi

	# XXX validate dhcp ipv4 range
	if [ "${dnsmasq_dhcp_ipv4_range}" != "" ]; then
		echo "dhcp-range=${dnsmasq_dhcp_ipv4_range}" >> ${cfg_file}
	fi

	# XXX validate no-dhcp interface
	if [ "${dnsmasq_no_dhcp_interface}" != "" ]; then
		echo "no-dhcp-interface=${dnsmasq_no_dhcp_interface}" >> ${cfg_file}
	fi
}

case $1 in
	'start')
		if [ "${dnsmasq_enable}" != "YES" ]; then
			exit 0
		fi

		generate_dnsmasq_config /var/run/dnsmasq.conf.$$ || exit 1
		mv /var/run/dnsmasq.conf.$$ /var/run/dnsmasq.conf
		/usr/local/sbin/dnsmasq -C /var/run/dnsmasq.conf ${dnsmasq_cmd_options} || exit 127
		exit 0
		;;
	'stop')
		kill `cat /var/run/dnsmasq.pid` || exit 127
		exit 0
		;;
	*)
		echo "$0: start|stop"
		exit 127
		;;
esac

exit 0
