#!/bin/sh

SCRIPT_NAME="`basename $0`"
SCRIPT_DIR="$(dirname `realpath $0`)"
CUR_DIR="`pwd`"

# suck in the per-device options
CFGNAME=$1
shift
. ${SCRIPT_DIR}/../cfg/${CFGNAME} || exit 1
# If X_BUILD_BASE_CFG is set, also load that in.
if [ "x${X_BUILD_BASE_CFG}" != "x" ]; then
	. ${SCRIPT_DIR}/../cfg/base/${X_BUILD_BASE_CFG} || exit 1
fi

# include the config variable generation code
. ${SCRIPT_DIR}/../lib/cfg.sh || exit 1

# This builds a tplink system image from the given kernel and MFS.

TRX_KERNEL=${X_KERNEL}.tramp.bin

# gzip or lzma the kernel image
if [ x${TRX_COMPRESSION_GZIP} = "xYES" ]; then
	cat ${TRX_KERNEL} | gzip -9 | dd of=${TRX_KERNEL}.gz
	TRX_KERNEL=${TRX_KERNEL}.gz
fi

if [ x${TRX_COMPRESSION_LZMA} = "xYES" ]; then
	/usr/local/bin/lzma e ${TRX_KERNEL} ${TRX_KERNEL}.lzma || exit 1
	TRX_KERNEL=${TRX_KERNEL}.lzma
fi

# build mktrxfw if not built or needs a refresh
make -C ${SCRIPT_DIR}/../../programs/mktrxfw  || exit 1

# If the kernel was built to netboot and has the MFSroot already
# compiled into it, use the all in one argument "-c" and drop
# the ramdisk from the command line.  Add "-Q" to ignore the fact
# that the f/w image will exceed the capacity of the flash on the
# device.

X_ROOTFS_CMDOPT=""
X_ROOTFS_SKIPOPT="-c"

#if [ "x${TPLINK_SKIP_ROOTFS}" = "xNO" ]; then
#	X_ROOTFS_CMDOPT="-r ${X_FSIMAGE}${X_FSIMAGE_SUFFIX}"
#	X_ROOTFS_SKIPOPT="-a 0x10000"
#fi

TRX_MKTRXFW="${SCRIPT_DIR}/../../programs/mktrxfw/mktrxfw"
TRX_LZMALOADER="${SCRIPT_DIR}/../../programs/mktrxfw/loader.gz"

${SCRIPT_DIR}/../../programs/mktrxfw/mktrxfw -c ${TRX_LZMALOADER} ${TRX_KERNEL} ${X_FSIMAGE}${X_FSIMAGE_SUFFIX} ${X_TFTPBOOT}/${CFGNAME}.trx


exit 0
