#!/bin/sh

SCRIPT_NAME="`basename $0`"
SCRIPT_DIR="$(dirname `realpath $0`)"
CUR_DIR="`pwd`"

# suck in the per-device options
CFGNAME=$1
shift
. ${SCRIPT_DIR}/../cfg/${CFGNAME} || exit 1
# If X_BUILD_BASE_CFG is set, also load that in.
if [ -n "${X_BUILD_BASE_CFG}" ]; then
	. ${SCRIPT_DIR}/../cfg/base/${X_BUILD_BASE_CFG} || exit 1
fi

# include the config variable generation code
. ${SCRIPT_DIR}/../lib/cfg.sh || exit 1

# lzma the kernel image
# Use the lzma from ports (/usr/local/bin/lzma) rather than the lzma
# from base, as EOS (end of stream) markers aren't allowed for uboot.

/usr/local/bin/lzma e ${X_KERNEL} ${X_TFTPBOOT}/kernel.${KERNCONF}.lzma || exit 1

# The firmware image should be two images - this platform is
# kernel then image.
# 1048576,5308416

# X_DLINK_MAX_KERN_SIZE=1048576
# X_DLINK_MAX_ROOTFS_SIZE=5308416

# Create the firmware
mkimage -A ${UBOOT_ARCH} -O linux -T kernel -C lzma \
  -a ${UBOOT_KERN_LOADADDR} -e ${UBOOT_KERN_STARTADDR} \
  -n "FreeBSD" -d ${X_TFTPBOOT}/kernel.${KERNCONF}.lzma \
  ${X_TFTPBOOT}/kernel.${KERNCONF}.lzma.uImage \
  || exit 1

KERN_SIZE="`stat -f '%z' ${X_TFTPBOOT}/kernel.${KERNCONF}.lzma.uImage`"
ROOTFS_SIZE="`stat -f '%z' ${X_FSIMAGE}${X_FSIMAGE_SUFFIX}`"
IMG_SIZE="`stat -f '%z' ${X_TFTPBOOT}/kernel.${KERNCONF}.lzma.uImage`"
#printf "*** Kernel size: %d bytes; Rootfs size: %d bytes\n" ${KERN_SIZE} ${ROOTFS_SIZE}
#if [ ${KERN_SIZE} -gt ${X_DLINK_MAX_KERN_SIZE} ]; then
#	echo "*** Kernel is too big ${KERN_SIZE} > ${X_DLINK_MAX_KERN_SIZE}!"
#	exit 1
#fi
#if [ ${ROOTFS_SIZE} -gt ${X_DLINK_MAX_ROOTFS_SIZE} ]; then
#	echo "*** Rootfs is too big ${ROOTFS_SIZE} > ${X_DLINK_MAX_ROOTFS_SIZE}!"
#	exit 1
#fi

if [ ${IMG_SIZE} -gt ${X_DLINK_MAX_IMG_SIZE} ]; then
	echo "*** Image is too big: ${IMG_SIZE} > ${X_DLINK_MAX_IMG_SIZE}"
	exit 1
fi

# concatenate the kernel image in a 64k chunk to the filesystem image
# and then add the dlink factor signature at the end.
(
	dd if=${X_TFTPBOOT}/kernel.${KERNCONF}.lzma.uImage bs=65536 conv=sync;
	dd if=${X_FSIMAGE}${X_FSIMAGE_SUFFIX} ;
	echo -n "${X_DLINK_SIGNATURE}"
) > ${X_TFTPBOOT}/${CFGNAME}.factory.img

exit 0
